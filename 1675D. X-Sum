import sys
input = sys.stdin.readline
 
############ ---- Input Functions ---- ############
def inp():
    return(int(input()))
def inlt():
    return(list(map(int,input().split())))
def insr():
    s = input()
    return(list(s[:len(s) - 1]))
def invr():
    return(map(int,input().split()))

'''
    n   0 1 2 3 Given
    m  --------
    0 | 1 2 2 1
    1 | 2 4 2 4
    2 | 2 2 3 1
    3 | 2 4 2 4

    n      0       1       2      3    [ \ , / ]
 m  --------------------------------
 0 |     [0,0]  [-1,1]  [-2,2] [-3,3]
 1 |     [1,1]  [0,2]  [-1,3] [-2,4]
 2 |     [2,2]  [1,3]  [ 0,4] [-1,5]
 3 |     [3,3]  [2,4]  [ 1,5] [ 0,6]

No of diagonals = m + n - 1

{
    \           /
    m - n :     m + n : 
    -3:1        0:1
    -2:6        1:4
    -1:5        2:8
     0:12       3:7
     1:6        4:11
     2:6        5:3
     3:2        6:4
}

   n 0 1 2 3 Sum = \ + / - x = 
 m  --------
0 | [12] [5 + 4 - 2] 2 1
1 | 2 4 2 4
2 | 2 2 3 1
3 | 2 4 2 4

'''
from collections import defaultdict

for i in range(int(input())):
    m, n = invr()
    grid = [inlt() for i in range(m)]
    
    left = defaultdict(int)
    right = defaultdict(int)

    for row in range(m):
        for col in range(n):
            right[row + col] += grid[row][col]
            left[row - col] += grid[row][col]

    answer = 0
    for row in range(m):
        for col in range(n):
            temp = right[row + col] + left[row - col] - grid[row][col] 
            answer = max(answer, temp)

    print(answer)
   
